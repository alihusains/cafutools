package main

import (
	"bytes"
	"encoding/json"
	"fmt"
	"io/ioutil"
	"log"
	"net/http"
	"strconv"
	"time"
)

const (
	EnvironmentProd    = "prod"
	EnvironmentStaging = "staging"

	PreCheck  string = "pre_check"
	PostCheck string = "post_check"

	CatalogProdUrl          = "https://catalog.cafu.app/api"
	MediaProdUrl            = "https://media.cafu.app/api"
	OperationalAssetProdUrl = "https://operational-assets.cafu.app/api"

	BatteryVerticalIDProd   = "3"
	ServicingVerticalIDProd = "5"
	TyreVerticalIDProd      = "4"

	PhotoCheckIDProd = 1
	NotesCheckIDProd = 2

	CatalogStagingUrl          = "https://catalog.global.staging.cafu.app/api"
	MediaStagingUrl            = "https://media.global.staging.cafu.app/api"
	OperationalAssetStagingUrl = "https://operational-assets.global.staging.cafu.app/api"

	BatteryVerticalIDStaging   = "22"
	ServicingVerticalIDStaging = "24"
	TyreVerticalIDStaging      = "23"

	PhotoCheckIDStaging = 34
	NotesCheckIDStaging = 35
)

type Product struct {
	ProductID int `json:"product_id"`
}

type PayloadBody struct {
	Products []Product `json:"products"`
}

type OpsAsset struct {
	ID uint `json:"id"`
}

type OpsAssetsResp struct {
	Data []OpsAsset `json:"data"`
}

type Check struct {
	CheckID    int    `json:"check_id"`
	Category   string `json:"category"`
	IsRequired bool   `json:"is_required"`
}

type MediaRelation struct {
	OwnerID      string `json:"owner_id"`
	OwnerType    string `json:"owner_type"`
	OwnerService string `json:"owner_service"`
}

type PipelineRunner struct {
	pool   chan struct{}
	client *http.Client

	CatalogUrl           string
	MediaUrl             string
	OperationalAssetsUrl string

	VariationIDs []int
	VerticalID   string

	PhotoCheckID int
	NotesCheckID int

	// MediaIDs is the media id of the catalog item which should be attached to all its variations
	MediaIDs []int
}

func NewPipeLineRunner(env string, verticalID string, variationIDs []int, mediaIDs []int) *PipelineRunner {
	if env == EnvironmentProd {
		return &PipelineRunner{
			pool:                 make(chan struct{}, 3),
			client:               &http.Client{},
			CatalogUrl:           CatalogProdUrl,
			MediaUrl:             MediaProdUrl,
			OperationalAssetsUrl: OperationalAssetProdUrl,
			VariationIDs:         variationIDs,
			VerticalID:           verticalID,
			PhotoCheckID:         PhotoCheckIDProd,
			NotesCheckID:         NotesCheckIDProd,
			MediaIDs:             mediaIDs,
		}
	}

	return &PipelineRunner{
		pool:                 make(chan struct{}, 3),
		client:               &http.Client{},
		CatalogUrl:           CatalogStagingUrl,
		MediaUrl:             MediaStagingUrl,
		OperationalAssetsUrl: OperationalAssetStagingUrl,
		VariationIDs:         variationIDs,
		VerticalID:           verticalID,
		PhotoCheckID:         PhotoCheckIDStaging,
		NotesCheckID:         NotesCheckIDStaging,
		MediaIDs:             mediaIDs,
	}
}

func (p *PipelineRunner) Add() {
	p.pool <- struct{}{}
}

func (p *PipelineRunner) Release() {
	<-p.pool
}

func (p *PipelineRunner) GetAssetIDs() []uint {
	serviceID := p.VerticalID
	baseUrl := p.OperationalAssetsUrl

	url := fmt.Sprintf("%s/v1/operational-assets/?service_ids=%s&page=1&per_page=100",
		baseUrl, serviceID)
	fmt.Println("url***\n", url)

	req, err := http.NewRequest("GET", url, nil)
	if err != nil {
		log.Fatalf("Error creating new http req: %v", err)
	}

	req.Header.Set("Content-Type", "application/json")

	resp, err := p.client.Do(req)
	if err != nil {
		panic(err)
	}

	defer resp.Body.Close()

	fmt.Println("Response Status for the getOpsAssetIDs:", resp.Status)

	body, err := ioutil.ReadAll(resp.Body)
	if err != nil {
		log.Fatalf("Error reading response body: %v", err)
	}

	var opsAssetResp OpsAssetsResp

	err = json.Unmarshal(body, &opsAssetResp)
	if err != nil {
		log.Fatalf("Error unmarshaling JSON response: %v", err)
	}

	var assetIDs []uint
	for _, asset := range opsAssetResp.Data {
		assetIDs = append(assetIDs, asset.ID)
	}

	// Print the unmarshalled data
	// fmt.Println("AssetIDs are:", assetIDs)

	return assetIDs
}

func (p *PipelineRunner) MapAssetsToVariations(assetID string) {
	variationIDs := p.VariationIDs
	baseUrl := p.OperationalAssetsUrl

	fmt.Println("printing assetID", assetID)

	p.Add()

	go func() {
		defer p.Release()

		url := fmt.Sprintf("%s/v1/operational-assets/%s", baseUrl, assetID)

		fmt.Println("url***\n", url)

		var products []Product
		for _, variationID := range variationIDs {
			products = append(products, Product{ProductID: variationID})
		}

		payload := PayloadBody{Products: products}

		// Marshal the payload to JSON
		jsonData, err := json.MarshalIndent(payload, "", "  ")
		if err != nil {
			log.Fatalf("Error marshaling payload to JSON: %v", err)
		}

		// Print or save the JSON payload to a file
		// fmt.Println(string(jsonData), "payload is")

		req, err := http.NewRequest("PATCH", url, bytes.NewBuffer(jsonData))
		if err != nil {
			panic(err)
		}

		req.Header.Set("Content-Type", "application/json")

		resp, err := p.client.Do(req)
		if err != nil {
			panic(err)
		}

		defer resp.Body.Close()

		fmt.Println("response Status:", resp.Status, assetID)

		if resp.StatusCode == http.StatusServiceUnavailable || resp.StatusCode == http.StatusBadGateway {
			time.Sleep(30 * time.Second)
		}
	}()
}

func (p *PipelineRunner) MapChecksToVariations(variationID int) {
	fmt.Println("Printing variationID", variationID)

	baseUrl := p.CatalogUrl
	photo := p.PhotoCheckID
	notes := p.NotesCheckID

	checkIDs := []int{photo, notes}
	checks := []string{PreCheck, PostCheck}

	p.Add()

	go func() {
		defer p.Release()

		for _, checkStage := range checks {
			for _, checkID := range checkIDs {
				checkPayload := Check{
					CheckID:    checkID,
					Category:   checkStage,
					IsRequired: false,
				}

				if checkPayload.CheckID == photo {
					checkPayload.IsRequired = true
				}

				fmt.Println("Payload for checks mapping is", checkPayload)
				url := fmt.Sprintf("%s/v1/variations/%d/checks",
					baseUrl, variationID)

				fmt.Println("url***\n", url)

				// Marshal the payload to JSON
				jsonData, err := json.MarshalIndent(checkPayload, "", "  ")
				if err != nil {
					log.Fatalf("Error marshaling payload to JSON: %v", err)
					continue
				}

				// Print or save the JSON payload to a file
				fmt.Println("Payload is", string(jsonData))

				req, err := http.NewRequest("POST", url, bytes.NewBuffer(jsonData))
				if err != nil {
					log.Printf("Error creating request: %v", err)
					continue
				}

				req.Header.Set("Content-Type", "application/json")

				resp, err := p.client.Do(req)
				if err != nil {
					log.Printf("Error sending request: %v", err)
					continue
				}

				defer resp.Body.Close()

				fmt.Printf("*** Response status: %s & variationID: %d ***\n", resp.Status, variationID)

				if resp.StatusCode == http.StatusServiceUnavailable || resp.StatusCode == http.StatusBadGateway {
					time.Sleep(30 * time.Second)
				}
			}
		}
	}()
}

func (p *PipelineRunner) MapMediaToVariations(variationID int) {
	fmt.Println("Printing variationID", variationID)

	variationIDStr := strconv.Itoa(variationID)
	baseUrl := p.MediaUrl
	mediaIDs := p.MediaIDs

	p.Add()

	go func() {
		defer p.Release()

		for _, mediaID := range mediaIDs {
			mediaPayload := MediaRelation{
				OwnerID:      variationIDStr,
				OwnerType:    "variations",
				OwnerService: "catalog",
			}

			fmt.Println("Payload for media mapping is", mediaPayload)

			url := fmt.Sprintf("%s/v1/media/%d/relations", baseUrl, mediaID)

			fmt.Println("url***\n", url)

			// Marshal the payload to JSON
			jsonData, err := json.MarshalIndent(mediaPayload, "", "  ")
			if err != nil {
				log.Fatalf("Error marshaling payload to JSON: %v", err)
				continue
			}

			// Print or save the JSON payload to a file
			fmt.Println("Payload is", string(jsonData))

			req, err := http.NewRequest("POST", url, bytes.NewBuffer(jsonData))
			if err != nil {
				log.Printf("Error creating request: %v", err)
				continue
			}

			req.Header.Set("Content-Type", "application/json")

			resp, err := p.client.Do(req)
			if err != nil {
				log.Printf("Error sending request: %v", err)
				continue
			}

			defer resp.Body.Close()

			fmt.Println("Response Status:", resp.Status, variationID)

			if resp.StatusCode == http.StatusServiceUnavailable || resp.StatusCode == http.StatusBadGateway {
				time.Sleep(30 * time.Second)
			}
		}
	}()
}

func RunOpsAsset(p *PipelineRunner) {
	opsAssetIDs := p.GetAssetIDs()
	fmt.Println("AssetIDs are", opsAssetIDs)

	fmt.Println("VariationIDs are", p.VariationIDs)

	if len(opsAssetIDs) == 0 {
		fmt.Println("Returning as no operational assetIDs present for given service_id")
		return
	}

	for i := 0; i < len(opsAssetIDs); i++ {
		p.MapAssetsToVariations(strconv.Itoa(int(opsAssetIDs[i])))

		if i%10 == 0 {
			time.Sleep(1 * time.Second)
		}
	}

	time.Sleep(10 * time.Second)
}

func RunPrePostChecks(p *PipelineRunner) {
	variationIDs := p.VariationIDs

	for i := 0; i < len(variationIDs); i++ {
		p.MapChecksToVariations(variationIDs[i])

		if i%10 == 0 {
			time.Sleep(1 * time.Second)
		}
	}

	time.Sleep(30 * time.Second)
}

func RunMediaRelations(p *PipelineRunner) {
	variationIDs := p.VariationIDs

	for i := 0; i < len(variationIDs); i++ {
		p.MapMediaToVariations(variationIDs[i])

		if i%10 == 0 {
			time.Sleep(1 * time.Second)
		}
	}

	time.Sleep(10 * time.Second)
}


func RunDeleteMediaRelations(p *PipelineRunner) {
	variationIDs := p.VariationIDs
	client := &http.Client{}
	// for i := 0; i < len(variationIDs); i++ {
		for _, variationID := range variationIDs {
		// baseUrl := p.MediaUrl
	

		getUrl := fmt.Sprintf("%s/v1/media?owner_service=catalog&owner_type=variations&owner_id=%d", p.MediaUrl, variationID)
		req, err := http.NewRequest("GET", getUrl, nil)
		if err != nil {
			log.Printf("Error creating GET request for variationID %d: %v", variationID, err)
			continue
		}
		req.Header.Set("Content-Type", "application/json")

		resp, err := client.Do(req)
		if err != nil {
			log.Printf("Error making GET request for variationID %d: %v", variationID, err)
			continue
		}
		defer resp.Body.Close()


		if resp.StatusCode != http.StatusOK {
			log.Printf("GET request for variationID %d failed with status: %d", variationID, resp.StatusCode)
			continue
		}

		// Parse the response to extract media IDs
		var apiResponse struct {
			Data []struct {
				Relation struct {
					MediaID int `json:"media_id"`
				} `json:"relation"`
			} `json:"data"`
		}
		body, err := ioutil.ReadAll(resp.Body)
		if err != nil {
			log.Printf("Error reading GET response body for variationID %d: %v", variationID, err)
			continue
		}
		if err := json.Unmarshal(body, &apiResponse); err != nil {
			log.Printf("Error parsing GET response for variationID %d: %v", variationID, err)
			continue
		}

		for _, item := range apiResponse.Data {

			mediaID := item.Relation.MediaID
			deleteUrl := fmt.Sprintf("%s/v1/media/%d", p.MediaUrl, mediaID)
			deleteReq, err := http.NewRequest("DELETE", deleteUrl, nil)
			if err != nil {
				log.Printf("Error creating DELETE request for mediaID %d: %v", mediaID, err)
				continue
			}
			deleteReq.Header.Set("Content-Type", "application/json")

			deleteResp, err := client.Do(deleteReq)
			if err != nil {
				log.Printf("Error making DELETE request for mediaID %d: %v", mediaID, err)
				continue
			}
			defer deleteResp.Body.Close()

			if deleteResp.StatusCode != http.StatusOK {
				log.Printf("DELETE request for mediaID %d failed with status: %d", mediaID, deleteResp.StatusCode)
			} else {
				log.Printf("Successfully deleted mediaID %d", mediaID)
			}


		}



	}

}

/***
	DON'T NEED TO MODIFY ANYTHING ABOVE THIS LINE UNLESS TO CHANGE THE FUNCTIONALITY
***/

/*
Follow these steps to get the IDs list.
1. Get the item_id(s) from item_verticals based on the {Battery/Servicing/Tyre}VerticalID{Prod/Staging}
	SELECT
		STRING_AGG(item_id::text, ',') AS item_ids
	FROM
		item_verticals iv
	WHERE
		iv.vertical_id = 23; // Eg: Tyre vertical ID in staging.

2. Get the ids from variations table based on the item_id(s) from step 1.
	SELECT
		STRING_AGG(id::text, ',') AS ids
	FROM
		variations v
	WHERE
		v.item_id = 68; // Eg: Economy catalog item ID in prod.
*/

// Get the latest list from DB and include all of them here (existing and newly added ones)
var BatteryVariationIDsProd = []int{
	233, 229, 239, 230, 227, 232, 71, 86, 95, 96, 75, 78, 90, 93, 74, 85, 92, 94, 83, 98, 79, 82, 76, 80, 77, 88, 91, 72, 81, 84, 87, 241, 228, 242, 234, 240, 243, 238, 628, 236, 97, 231, 235, 73, 89, 237,
}

// Get the latest list from DB and include all of them here (existing and newly added ones)
var ServicingVariationIDsProd = []int{
	// 5, 277, 330, 335, 309, 306, 278, 265, 635, 313, 261, 272, 318, 304, 326, 308, 298, 289, 266, 279, 636, 637, 638, 639, 286, 640, 641, 642, 643, 644, 645, 646, 262, 294, 333, 259, 297, 273, 287, 291, 267, 268, 311, 320, 303, 302, 269, 327, 263, 270, 288, 324, 328, 321, 284, 305, 332, 299, 283, 276, 312, 331, 281, 292, 317, 271, 310, 316, 300, 323, 280, 295, 325, 275, 285, 260, 264, 274, 282, 293, 296, 301, 307, 314, 315, 319, 322, 329, 334, 352, 343, 409, 340, 375, 370, 374, 360, 388, 402, 347, 358, 383, 366, 394, 408, 345, 372, 364, 381, 346, 350, 336, 411, 341, 413, 365, 361, 391, 362, 344, 390, 399, 342, 378, 368, 357, 380, 385, 377, 367, 369, 389, 338, 387, 354, 404, 401, 403, 410, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 353, 355, 373, 356, 359, 398, 371, 400, 406, 363, 376, 379, 382, 384, 386, 392, 393, 395, 397, 405, 407, 412, 337, 339, 348, 349, 351, 502, 486, 503, 493, 495, 456, 446, 488, 483, 416, 470, 474, 429, 463, 454, 435, 462, 508, 439, 432, 428, 423, 482, 458, 448, 440, 491, 455, 500, 441, 420, 426, 461, 442, 419, 467, 453, 449, 436, 477, 468, 460, 443, 465, 425, 444, 499, 434, 485, 418, 430, 479, 494, 505, 489, 414, 451, 498, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 415, 417, 421, 422, 424, 427, 431, 433, 437, 438, 445, 447, 450, 452, 457, 459, 464, 466, 471, 472, 475, 476, 478, 480, 481, 484, 487, 490, 492, 496, 497, 501, 506, 507, 509,
5,2185,2064,2150,326,564,275,311,557,561,298,320,513,2061,563,297,329,535,559,2049,560,294,555,2147,261,2170,268,281,515,310,544,565,128,278,312,532,539,566,263,2070,130,571,2058,127,277,520,522,554,640,2048,287,308,518,545,567,568,639,2068,131,136,293,550,2171,581,2053,548,582,284,285,309,512,527,573,2071,317,517,546,2151,580,574,642,300,637,259,295,325,2149,145,137,274,132,143,292,290,139,2056,129,135,2152,323,579,643,302,322,264,541,645,2060,328,529,2051,549,134,273,551,523,2063,2066,305,569,314,537,3499,3500,3501,3502,3503,3504,3505,3506,3507,3508,3509,3510,3511,3512,3513,3514,3515,3516,3517,2055,2069,291,335,266,299,330,562,577,514,570,519,646,265,282,536,327,270,313,142,146,316,141,578,126,576,543,303,307,538,525,301,306,333,540,2054,2050,2148,2047,2065,2067,2169,318,279,542,148,140,572,524,553,644,324,534,575,635,315,276,319,530,547,558,641,144,267,638,334,2059,2057,2146,283,511,260,133,147,289,531,526,321,556,269,280,516,138,636,2052,304,288,521,271,125,296,272,533,528,332,331,552,286,262,2062,362,363,365,387,2075,162,151,336,337,351,352,358,364,149,2094,403,2091,2177,372,379,347,375,386,653,2098,176,382,399,647,2078,182,181,165,167,338,344,163,2153,179,343,353,410,2173,174,657,2079,152,349,374,385,164,2076,2154,651,2083,2093,371,171,366,373,2155,648,169,2072,2080,2092,342,392,2087,159,377,2096,2156,341,400,408,2172,654,183,173,397,413,2082,168,383,656,2085,650,405,2077,155,396,339,150,354,390,2174,3518,3519,3520,3521,3522,3523,3524,3525,3526,3527,3528,3529,3530,3531,3532,3533,3534,3535,3536,3537,384,172,2159,153,178,404,166,2175,2176,369,378,407,2088,2073,412,350,2081,158,177,649,175,348,360,406,170,355,401,160,380,376,357,411,409,389,394,180,156,361,381,652,346,356,367,395,398,370,388,402,154,161,345,391,340,359,393,368,2090,2089,157,2097,2074,2160,2084,2095,655,2157,2158,2161,2086,470,485,504,658,663,430,217,673,676,2106,225,451,460,681,662,2121,456,2122,486,203,226,445,436,483,496,449,2167,2101,434,212,476,500,2103,2113,2115,201,426,439,498,184,427,440,441,477,479,446,494,508,207,221,186,199,204,222,192,469,419,454,493,675,503,224,435,2112,2114,495,497,491,2165,2109,2116,2124,461,2183,674,210,463,2120,487,2163,2119,2102,661,448,471,2117,185,502,2104,195,416,422,432,466,668,671,206,447,481,499,219,223,431,501,664,670,677,678,680,2123,205,213,415,428,666,2184,191,421,474,478,2110,2111,2162,468,480,489,659,193,209,218,423,492,679,197,208,215,420,672,187,443,459,473,669,2181,190,211,442,425,433,464,472,2166,2180,437,438,188,457,2099,189,200,417,214,458,484,424,444,509,665,667,198,429,462,482,488,660,2168,194,414,450,475,490,202,216,452,2100,2107,196,418,455,2105,2164,453,2118,2178,2179,507,506,2182,2108,467,465,3538,3539,3540,3541,3542,3543,3544,3545,3546,3547,3548,3549,3550,3551,3552,3553,3554,3555,3556,3557,220,505,510,






}

// Get the latest list from DB and include all of them here (existing and newly added ones)
var TyreVariationIDsProd = []int{
	
	661, 662, 667, 668, 669, 670, 671, 672, 673, 674, 675, 2315, 2314, 2324, 2317, 677, 676, 682, 678, 679, 680, 681, 683, 2311, 2312, 2313, 2316, 684, 2318, 2319, 2320, 2321, 2322, 2323, 685, 686, 687, 688, 689, 690, 691, 4450, 4451, 4452, 4453, 4454, 4455, 2325, 692, 693, 2356, 2357, 2358, 2359, 2387, 2388, 2360, 2361, 2362, 2363, 2364, 2385, 2386, 2382, 2326, 2365, 2366, 2367, 2368, 2369, 298, 2389, 2390, 2375, 712, 2394, 2395, 2376, 2411, 2412, 2414, 2413, 2378, 713, 2332, 2333, 2334, 2335, 2379, 2396, 2397, 2331, 2398, 2336, 2337, 2380, 2381, 2329, 2338, 2339, 2399, 721, 2400, 722, 2401, 2402, 2403, 2404, 2340, 2341, 2342, 2343, 2405, 2406, 2344, 2345, 2346, 2347, 2348, 2349, 2407, 2408, 2409, 2350, 2351, 704, 2352, 2353, 2330, 2410, 2327, 2534, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 2370, 710, 2373, 2377, 714, 715, 2384, 716, 717, 718, 719, 299, 720, 723, 724, 725, 726, 727, 728, 729, 733, 795, 734, 867, 750, 749, 831, 846, 735, 836, 826, 736, 778, 737, 738, 739, 740, 741, 743, 744, 745, 746, 747, 748, 751, 752, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 732, 731, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 796, 797, 798, 799, 800, 801, 802, 803, 804, 2415, 805, 730, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 827, 828, 829, 830, 832, 833, 834, 835, 837, 838, 839, 840, 841, 842, 843, 844, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 663, 664, 665, 666, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 742, 754, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 2421, 2418, 2419, 2420, 1169, 2427, 2422, 1170, 2440, 2416, 1234, 2432, 2417, 1160, 2425, 2431, 1163, 2437, 2428, 2426, 1217, 2433, 2441, 2429, 1193, 2424, 1210, 2443, 2434, 1179, 2435, 1184, 2436, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1171, 1172, 1173, 1174, 1175, 2423, 1176, 1159, 1177, 1178, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1192, 1196, 1207, 1232, 1233, 1235, 1236, 1188, 1189, 1190, 1191, 1194, 1195, 2430, 1197, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1208, 1211, 1212, 1213, 1214, 1198, 2438, 1215, 2439, 1216, 1218, 2442, 1219, 1220, 1221, 1222, 1223, 2444, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 2448, 1299, 2478, 2483, 2482, 2485, 2494, 2449, 2450, 2451, 1324, 2447, 2484, 1349, 2446, 1340, 2477, 1341, 1237, 2479, 2470, 2468, 1317, 2506, 1290, 1325, 2491, 1344, 1257, 2452, 2453, 1284, 2496, 1331, 1335, 1336, 2503, 1343, 1250, 2467, 1252, 2455, 1262, 2456, 1271, 1264, 1246, 1330, 1274, 2459, 1273, 2462, 2463, 1279, 2488, 2464, 1253, 1315, 1307, 2487, 2445, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 2454, 1245, 1247, 300, 1248, 1249, 2457, 301, 2458, 1251, 302, 1254, 1255, 303, 1256, 1258, 1259, 1260, 1261, 1263, 1265, 1266, 1269, 1270, 1272, 1275, 1276, 1278, 1280, 1281, 1282, 1283, 1285, 1286, 1287, 2471, 2472, 1291, 1293, 1295, 1296, 2473, 2474, 1297, 1298, 2475, 304, 305, 1300, 2480, 2481, 1301, 1302, 1303, 1304, 2486, 1305, 1306, 2489, 306, 2493, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1316, 2497, 2499, 2500, 1318, 1319, 1320, 1321, 1322, 1323, 1326, 1328, 1329, 1332, 2501, 1334, 1337, 1338, 1339, 1342, 1345, 1346, 2505, 1347, 1348, 1350, 1351, 2661, 2638, 2668, 2664, 2637, 2670, 2671, 2669, 2667, 2666, 2633, 2702, 2541, 2678, 2699, 2674, 2696, 2700, 2630, 2689, 2564, 2686, 2565, 2679, 2682, 2544, 2676, 2698, 2631, 2673, 2662, 2640, 2636, 2567, 2568, 2507, 2569, 2570, 2508, 2571, 1360, 2509, 2572, 2573, 2688, 2681, 2683, 2546, 2575, 2576, 2659, 2577, 2677, 2663, 2692, 2654, 2632, 2510, 2578, 2542, 2580, 2511, 2581, 2583, 2691, 2512, 2585, 2694, 2586, 2587, 2588, 2684, 2543, 2589, 2513, 2590, 2701, 2547, 2548, 2549, 2551, 1367, 2514, 2592, 2515, 2594, 2516, 2595, 2517, 2518, 2519, 2596, 2520, 2597, 2521, 2598, 2522, 2523, 2599, 2524, 2600, 2525, 2601, 2526, 2641, 2643, 2644, 2602, 2528, 2603, 2529, 2604, 2530, 2605, 2531, 2606, 2532, 2607, 2609, 2533, 2552, 2610, 2553, 2660, 2535, 2611, 2554, 2555, 2656, 2657, 2536, 2612, 2613, 2615, 1386, 2557, 2616, 1387, 2558, 2652, 2645, 2642, 2646, 2617, 2619, 2537, 2620, 2538, 2621, 2539, 2622, 2560, 2623, 2561, 2639, 2651, 2649, 2650, 2625, 2626, 2540, 2627, 2658, 2655, 1406, 2648, 2562, 2628, 2563, 2629, 2635, 2634, 1352, 2527, 2545, 2550, 307, 1353, 1354, 2556, 2559, 1355, 2566, 1356, 1357, 1358, 1359, 1361, 2574, 1362, 1363, 2579, 1364, 2582, 2584, 1365, 1366, 2591, 2593, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 2608, 1381, 1382, 1383, 1384, 2391, 2371, 2372, 2383, 2328, 2374, 711, 2354, 2355, 2392, 2393, 1385, 2614, 2618, 1388, 1389, 1390, 1391, 2624, 1392, 1393, 1394, 1395, 1396, 4192, 1397, 1398, 1399, 1400, 1401, 1402, 1209, 2476, 1267, 2465, 1277, 2461, 2469, 2498, 2490, 1292, 2460, 2492, 2502, 1268, 2504, 2495, 2466, 1288, 1289, 1294, 1327, 1333, 2647, 1403, 1404, 2653, 1405, 1407, 1408, 1409, 1410, 2665, 1411, 1412, 1413, 1414, 2672, 1415, 2675, 1416, 1417, 1418, 2680, 1419, 1420, 1421, 2685, 2687, 1422, 2690, 1423, 2693, 2695, 2697, 1424, 1425, 1426, 1427, 4456, 4457, 4458, 4459, 4460, 4461, 4462, 4463, 4464, 4465, 4466, 4467, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 2711, 2725, 2728, 2722, 2717, 2731, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710, 2712, 2713, 2714, 2715, 2716, 2718, 2719, 2720, 2721, 2723, 2724, 2726, 2727, 2729, 2730, 2732, 2733, 2734, 2735, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 2776, 1587, 2777, 1588, 2775, 2820, 2781, 2744, 2758, 2814, 2779, 1660, 2780, 1650, 1621, 1701, 2770, 2765, 2792, 2817, 1735, 2782, 2747, 2774, 2790, 2791, 2766, 2813, 2764, 2783, 2746, 2816, 1705, 2793, 2807, 2755, 2751, 2741, 2756, 2742, 2743, 2748, 2752, 2754, 2749, 2736, 2737, 1584, 2738, 2739, 1585, 2740, 1786, 2745, 1776, 1787, 1788, 1771, 1775, 1779, 1789, 1778, 1790, 2750, 1777, 1773, 1774, 2753, 1772, 2757, 2759, 1647, 1593, 1592, 1594, 1595, 2760, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 2761, 1609, 2762, 1610, 1611, 1612, 1613, 1614, 1615, 2763, 1725, 1726, 1727, 2767, 2768, 1616, 1617, 1618, 1619, 1620, 2769, 1622, 1623, 1624, 1648, 1649, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1785, 1780, 1625, 1626, 1627, 1628, 1781, 1586, 1782, 1629, 1783, 1630, 1631, 1784, 2771, 2772, 1632, 1633, 2773, 1634, 1591, 1583, 1728, 1590, 1729, 1589, 1644, 1645, 1646, 1738, 1739, 1740, 1741, 1742, 2778, 1635, 1636, 1663, 1664, 1665, 1666, 1667, 2788, 1668, 2789, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 2794, 2795, 2796, 2797, 1695, 2798, 1696, 1697, 2799, 2800, 2801, 1698, 2802, 2803, 1699, 2804, 1700, 1702, 1703, 1704, 1730, 1731, 1732, 2805, 2806, 1706, 1707, 1708, 2808, 2809, 1709, 1710, 2810, 1711, 2811, 1712, 1713, 1661, 2812, 1733, 1714, 1715, 1734, 1716, 2815, 1717, 1718, 1719, 1720, 1721, 1722, 2818, 1723, 1724, 1744, 1743, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 2819, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 2821, 2822, 1582, 1811, 1814, 2825, 1820, 2829, 2834, 1848, 2831, 1850, 2826, 1833, 1853, 1826, 2823, 1792, 2832, 1840, 2833, 1798, 1793, 1799, 1800, 1794, 1795, 1796, 1801, 1802, 1791, 1797, 1803, 1804, 1805, 1806, 2824, 1808, 1809, 1810, 1812, 1813, 1815, 1816, 1817, 1818, 2827, 1819, 2828, 1807, 1824, 1821, 1822, 1823, 2830, 1830, 1845, 1846, 1847, 1849, 1851, 1852, 1854, 1844, 1855, 1831, 1832, 1834, 1835, 1836, 1837, 1825, 1838, 1827, 1839, 1828, 1829, 1841, 1842, 1843, 1856, 1857, 1858, 2835, 2836, 2837, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 3565, 3566, 3567, 3568, 3569, 3570, 3571, 3572, 3573, 3574, 3575, 3576, 3577, 3578, 3579, 3580, 3581, 3582, 3583, 3584, 3585, 3586, 3587, 3588, 3589, 3590, 3591, 3592, 3593, 3594, 3595, 3596, 3597, 3598, 3599, 3600, 3601, 3602, 3603, 3604, 3605, 3606, 3607, 3608, 3609, 3610, 3611, 3612, 3613, 3614, 3615, 3616, 3617, 3618, 3619, 3620, 3621, 3622, 3623, 3624, 1908, 3625, 3626, 3627, 3628, 3629, 3630, 3631, 3632, 3633, 3634, 3635, 3636, 3637, 3638, 3639, 3640, 3641, 3642, 3643, 3644, 3645, 3646, 3647, 3648, 3649, 3650, 3651, 3652, 3653, 3654, 3655, 3656, 3657, 3658, 3659, 1460, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 3660, 3661, 3662, 3663, 3664, 3665, 3666, 3667, 3668, 3669, 3670, 3671, 3672, 3673, 3674, 3675, 3676, 3677, 3678, 3679, 3680, 3681, 3682, 3683, 3684, 3685, 3686, 3687, 3688, 3689, 3690, 3691, 3692, 3693, 3694, 3695, 3696, 3697, 3698, 3699, 3700, 3701, 3702, 3703, 3704, 3705, 3706, 3707, 3708, 3709, 3710, 3711, 3712, 3713, 3714, 3715, 3716, 3717, 3718, 3719, 3720, 3721, 3722, 3723, 3724, 3725, 3726, 3727, 3728, 3729, 3730, 3731, 3732, 3733, 3734, 3735, 3736, 3737, 3738, 3739, 3740, 3742, 3743, 3744, 3745, 3746, 3747, 3748, 3749, 3750, 3751, 3752, 3753, 3754, 3755, 3756, 3757, 3758, 3759, 3760, 3761, 3762, 3763, 3764, 3765, 3766, 3767, 3768, 3769, 3770, 3771, 3772, 3773, 3774, 3775, 3776, 3777, 3778, 3779, 1909, 3780, 3781, 3782, 3783, 3784, 3785, 3786, 3787, 3788, 3789, 3790, 3791, 3792, 3793, 3794, 3795, 3796, 3797, 3798, 3799, 3800, 3801, 3802, 3803, 3804, 1461, 3805, 3806, 3807, 3808, 3809, 3810, 3811, 3812, 3813, 3814, 3815, 3816, 3817, 3818, 3819, 3820, 3821, 3822, 3823, 3824, 3825, 3826, 3827, 3828, 3829, 3830, 3831, 3832, 3833, 3834, 3835, 3836, 3837, 3838, 3839, 3840, 1910, 1911, 1912, 1913, 1914, 3841, 3842, 3843, 3844, 3845, 3846, 3847, 3848, 3849, 3850, 3851, 3852, 3853, 3854, 3855, 3856, 3857, 3858, 3859, 3860, 3861, 3862, 3863, 3864, 3865, 3866, 3867, 3868, 3869, 3870, 3871, 3872, 3873, 3874, 3875, 3876, 3877, 3878, 3879, 3880, 3881, 3882, 3883, 3884, 3885, 3886, 3887, 3888, 3889, 3890, 3891, 3892, 3893, 3894, 3895, 3896, 3897, 3898, 3899, 3900, 3901, 3902, 3903, 3904, 3905, 3906, 3907, 3908, 3909, 3910, 3911, 3912, 3913, 3914, 3915, 3916, 3917, 3918, 3919, 3920, 3921, 3922, 3923, 3924, 3925, 3926, 3927, 3928, 3929, 3930, 3931, 3932, 3933, 3934, 3935, 3936, 3937, 3938, 3939, 3940, 3941, 3942, 3943, 3944, 3945, 3946, 3947, 3948, 3949, 3950, 3951, 3952, 3953, 3954, 3955, 3956, 3957, 3958, 3959, 3960, 3961, 3962, 3963, 3964, 3965, 3966, 3967, 3968, 3969, 3970, 3971, 3972, 3973, 3974, 3975, 3976, 3977, 3978, 3979, 3980, 3981, 3982, 3983, 3984, 3985, 3986, 3987, 3988, 3989, 3990, 3991, 1915, 3992, 3993, 3994, 3995, 3996, 3997, 3998, 3999, 4000, 4001, 4002, 4003, 4004, 4005, 4006, 4007, 4008, 4009, 4010, 4011, 4012, 4013, 4014, 4015, 4016, 4017, 4018, 4019, 4020, 4021, 4022, 4023, 4024, 4025, 4026, 4027, 4028, 4029, 4030, 4031, 4032, 4033, 4034, 4035, 4036, 4037, 4038, 4039, 4040, 4041, 4042, 4043, 4044, 4045, 4046, 4047, 4048, 4049, 4050, 4051, 1916, 1917, 1918, 4052, 4053, 4054, 4055, 4056, 4057, 4058, 4059, 4075, 4076, 1919, 1920, 4077, 4078, 4079, 4080, 4081, 4082, 1921, 1922, 4083, 4084, 4085, 4086, 4087, 4088, 4089, 4090, 4091, 4092, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1736, 1737, 1658, 2784, 2785, 2786, 1659, 1662, 2787, 3741, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4060, 4061, 4062, 4063, 4064, 4065, 4066, 4067, 4068, 4069, 4070, 4071, 4072, 4073, 4074, 4217, 1948, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 1949, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 1950, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4344, 4345, 4346, 4347, 4348, 4349, 4350, 4351, 4352, 4353, 4354, 4355, 4356, 4357, 4358, 4359, 4360, 4361, 4362, 4363, 4364, 4365, 4366, 4367, 4368, 4369, 4370, 4371, 4372, 4373, 4374, 4375, 4376, 4377, 4378, 4379, 4380, 4381, 4382, 4383, 4384, 4385, 4386, 4387, 4398, 4399, 4400, 4401, 4402, 4403, 4404, 4405, 1951, 4406, 4407, 4408, 4409, 4410, 4411, 4412, 4413, 4414, 4415, 4416, 4417, 4418, 4419, 4420, 4421, 4422, 4423, 4424, 4425, 4426, 4427, 4428, 4429, 4430, 4431, 1952, 4432, 4433, 4434, 4435, 4388, 4389, 4390, 4391, 4392, 4393, 4394, 4395, 4396, 4397, 4436, 4437, 4438, 4439, 4440, 4441, 4442, 4443, 4444, 4445, 4446, 4447, 4448, 4449, 2838, 2839, 2840, 2841, 2842, 2843, 2844, 2845, 1953, 1954, 1955, 1956, 1957, 1966, 1967, 1968, 1969, 4468, 4469, 1970, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1971, 4470, 4471, 1972, 1973, 1974, 1975, 1976, 1977, 4472, 4473, 4474, 1978, 1979, 1980, 1981, 1982, 4475, 4476, 1983, 4477, 1984, 4478, 4479, 4480, 4481, 4482, 4483, 4484, 4485, 4486, 2,

}

// Get the latest list from DB and include all of them here (existing and newly added ones)
var BatteryVariationIDsStaging = []int{
	13198, 13194, 13212, 13206, 13674, 13671, 13684, 17292, 13203, 13190, 13202, 13208, 13191, 13201, 13213, 13681, 13676, 13679, 13205, 13207, 13193, 13200, 13204, 13211, 13680, 13672, 13188, 13210, 13195, 13196, 13214, 13685, 13192, 13669, 13670, 13682, 13673, 13677, 13675, 13678, 13199, 13189, 13683, 13197, 13209,
}

// Get the latest list from DB and include all of them here (existing and newly added ones)
var ServicingVariationIDsStaging = []int{
	13708, 13709, 13710, 13711, 13712, 13713, 13714, 13715, 13716, 13717, 13718, 13719, 13720, 13721, 13722, 13723, 13724, 13725, 13726, 13727, 13728, 13729, 13730, 13731, 13732, 13733, 13734, 13735, 13736, 13737, 13738, 13739, 13740, 13741, 13742, 13743, 13744, 13745, 13746, 13747, 13748, 13749, 13750, 13751, 13752, 13753, 13754, 13755, 13756, 13757, 13758, 13759, 13760, 13761, 13762, 13763, 13764, 13765, 13766, 13767, 13768, 13769, 13770, 13771, 13772, 13773, 13774, 13775, 13776, 13777, 13778, 13779, 13780, 13781, 13782, 13783, 13784, 13785, 13786, 13787, 13788, 13789, 13790, 13791, 13792, 13793, 13794, 13795, 13796, 13797, 13798, 13799, 13800, 13801, 13802, 13803, 13804, 13805, 13806, 13807, 13808, 13809, 13810, 13811, 13812, 13813, 13814, 13815, 13816, 13817, 13818, 13819, 13820, 13821, 13822, 13823, 13824, 13825, 13826, 13827, 13828, 13829, 13830, 13831, 13832, 13833, 13834, 13835, 13836, 13837, 13838, 13839, 13840, 13841, 13842, 13843, 13844, 13845, 13846, 13847, 13848, 13849, 13850, 13851, 13852, 13853, 13854, 13855, 13856, 13857, 13858, 13859, 13860, 13861, 13862, 13863, 13864, 13865, 13866, 13867, 13868, 13869, 13870, 13871, 13872, 13873, 13874, 13875, 13876, 13877, 13878, 13879, 13880, 13881, 13882, 13883, 13884, 13885, 13886, 13887, 13888, 13889, 13890, 13891, 13892, 13893, 13894, 13895, 13896, 13897, 13898, 13899, 13900, 13901, 13902, 13903, 13904, 13905, 13906, 13907, 13908, 13909, 13910, 13911, 13912, 13913, 13914, 13915, 13916, 13917, 13918, 13919, 13920, 13921, 13922, 13923, 13924, 13925, 13926, 13927, 13928, 13929, 13930, 13931, 13932, 13933, 13934, 13935, 13936, 13937, 13938, 13939, 13940, 13941, 13942, 13943, 13944, 13945, 13946, 13947, 13948, 13949, 13950, 13951, 13952, 13953, 13954, 13955, 13956, 13957, 13958, 14036, 17254, 17255, 17256, 17257, 17258, 17259, 17260, 17261, 17262, 17263, 17264, 17265, 17266, 17267, 17268, 17269, 17270, 17271, 17272, 17273, 17274, 17275, 17276, 17277, 17278, 17279, 17280, 17281, 17282, 17283, 17284, 17285, 17286, 17287, 17288, 17289, 17290, 17291,
}

// Get the latest list from DB and include all of them here (existing and newly added ones)
var TyreVariationIDsStaging = []int{
	
	17061, 17063, 17064, 17065, 17066, 17067, 17068, 17070, 17075, 17077, 17071, 17074, 17069, 17072, 17073, 17062, 18145, 18158, 18165, 18166, 16537, 16241, 16008, 16005, 16004, 16006, 16007, 16075, 18147, 18148, 18157, 18146, 16538, 18164, 18161, 18163, 18162, 18160, 18159, 17078, 17079, 17081, 17082, 17084, 17076, 17080, 21055, 21056, 21057, 21058, 21059, 21060, 19645, 17083, 16604, 16605, 19751, 17142, 19752, 15976, 19810, 17144, 19754, 19755, 17141, 19753, 19885, 19809, 19878, 19802, 19806, 19757, 19758, 19756, 17143, 19759, 15789, 19766, 19883, 19807, 19767, 19760, 19808, 19762, 19761, 15978, 19804, 19879, 19781, 17147, 19768, 15984, 19782, 19884, 19769, 19770, 19882, 19811, 19772, 19771, 15987, 19773, 17146, 19774, 19876, 19783, 19775, 19784, 19785, 19776, 19786, 17150, 19787, 15993, 19763, 19803, 19880, 19792, 15996, 19777, 15988, 19788, 15995, 19793, 19796, 19789, 17151, 19778, 19877, 19794, 19881, 19790, 19886, 19779, 17148, 19764, 19780, 19795, 19797, 19798, 19799, 19800, 15999, 19791, 19887, 19805, 19801, 19765, 15957, 15787, 15964, 15969, 15981, 15990, 15786, 15994, 15997, 15992, 15998, 15975, 15785, 15977, 15960, 15966, 18221, 15985, 17145, 18222, 15980, 15972, 18220, 15974, 15983, 15986, 15979, 15788, 15991, 15982, 15989, 15967, 16000, 16001, 15968, 17162, 16430, 16574, 17161, 16237, 16337, 16336, 16225, 16315, 17715, 16229, 16220, 17717, 16196, 17711, 16236, 16235, 16200, 16522, 16183, 16172, 17163, 16173, 16171, 16191, 16190, 16348, 16575, 16464, 16400, 16155, 16158, 16157, 16294, 16188, 16153, 16189, 16150, 16147, 16269, 16270, 16292, 16159, 17160, 16149, 16148, 16151, 16154, 16202, 16156, 16266, 16258, 16268, 16145, 16146, 16174, 16193, 16152, 16203, 16184, 16179, 16211, 16209, 16300, 16201, 16293, 16205, 16138, 16135, 16134, 16180, 16402, 16198, 16182, 16177, 16216, 16401, 17718, 16460, 16459, 16467, 19642, 16160, 16178, 16143, 16144, 16195, 16140, 16141, 16142, 16186, 16185, 16206, 16208, 16295, 16213, 16234, 16199, 16219, 16207, 16210, 16267, 16279, 16299, 16221, 16222, 16223, 16224, 16271, 16226, 16227, 16228, 16230, 16231, 16232, 16233, 16296, 16297, 16298, 16466, 16463, 16259, 16260, 17713, 16316, 16465, 17712, 17710, 16461, 16462, 17716, 17714, 16242, 16277, 16139, 16137, 16136, 16175, 16215, 16218, 16204, 16214, 16265, 16217, 16194, 16197, 16212, 16192, 16187, 16278, 16283, 16284, 16335, 16176, 16170, 16166, 16169, 16164, 16167, 16161, 16168, 16162, 16165, 16163, 16282, 16334, 17164, 16181, 16714, 16705, 16703, 16729, 16628, 16631, 16630, 17177, 16642, 16629, 16676, 16834, 16846, 16819, 16638, 16716, 16823, 16643, 16730, 16658, 16847, 16802, 16833, 16660, 16741, 16821, 16644, 16758, 16634, 16636, 16761, 16659, 16838, 16795, 16698, 16713, 16712, 16717, 16839, 17190, 16683, 16719, 16663, 16690, 16685, 16684, 16775, 16814, 16778, 16857, 16784, 16767, 16768, 16831, 16805, 16845, 16794, 16788, 17182, 16807, 16803, 16796, 16791, 16815, 16820, 16639, 16816, 16811, 16855, 16738, 16735, 16744, 16647, 16689, 16725, 16693, 16681, 16651, 16679, 16720, 16700, 16699, 16670, 16691, 16662, 16695, 16854, 16809, 16851, 16766, 16792, 16827, 16764, 17186, 17191, 16772, 16753, 16751, 16655, 16732, 16696, 16757, 16718, 16710, 16678, 16677, 16649, 16654, 16653, 16648, 16680, 17178, 16694, 16646, 16734, 16737, 16640, 16756, 16745, 16715, 16667, 16669, 16671, 16711, 16727, 16721, 16750, 16665, 17183, 16762, 16675, 16692, 16832, 16799, 16661, 16829, 16645, 16779, 16801, 16787, 16818, 16828, 16781, 16800, 16723, 16709, 16707, 16672, 16686, 16673, 16674, 16706, 16806, 16853, 16726, 16837, 16785, 16748, 17180, 16687, 16743, 16755, 16701, 16702, 17179, 16704, 16754, 16812, 16780, 16765, 16759, 16666, 16668, 16650, 17187, 16774, 16682, 16804, 16770, 16841, 17192, 16797, 16798, 16842, 16835, 16843, 16830, 16840, 16776, 16777, 16836, 16858, 16852, 16688, 16724, 16740, 16752, 16728, 16652, 16769, 16783, 16817, 16782, 16813, 16733, 16736, 16739, 16825, 17189, 16793, 17184, 16844, 16789, 16810, 16860, 16856, 16742, 16708, 16747, 17181, 16746, 16664, 16773, 16808, 16697, 17185, 16771, 16824, 16848, 16826, 16859, 16749, 16790, 17188, 16850, 16849, 16731, 16722, 16822, 16635, 16641, 16656, 16633, 16657, 16632, 16637, 16760, 16786, 16763, 16577, 16576, 17035, 17006, 17011, 17016, 17017, 17007, 17009, 17010, 17014, 17020, 17023, 17025, 17008, 17012, 17013, 17015, 17018, 17019, 17021, 17024, 17004, 17028, 17030, 17031, 17034, 17005, 17026, 17027, 17029, 17033, 17022, 17032, 18074, 18075, 18076, 18077, 16424, 18079, 18080, 16469, 17165, 18082, 16403, 17174, 18085, 16551, 18086, 18087, 16404, 18091, 18092, 18093, 16476, 18096, 18097, 18099, 16362, 17175, 16558, 18111, 18116, 16480, 18132, 16564, 18143, 16552, 16357, 16468, 16356, 16557, 16472, 16578, 16374, 16455, 16470, 16473, 16471, 18078, 16562, 16359, 16568, 16369, 16371, 16553, 16559, 16561, 16360, 16477, 16566, 16375, 16363, 17719, 16426, 16474, 16358, 16482, 16427, 16428, 16433, 16565, 16399, 16361, 18120, 16556, 16367, 16368, 16370, 16481, 16372, 16571, 16373, 16550, 16555, 16567, 16560, 16580, 16563, 16425, 16458, 18106, 16475, 18112, 16554, 16579, 18110, 16376, 16478, 16364, 16365, 16366, 18119, 16515, 16479, 16405, 16569, 16570, 16429, 16406, 16398, 18173, 17216, 17131, 18170, 15814, 18171, 18197, 18192, 18193, 18172, 17110, 17149, 18174, 15857, 18201, 15810, 18180, 15796, 17217, 18198, 15883, 18200, 17690, 18205, 17698, 17139, 18184, 18181, 15846, 18195, 17137, 18179, 18183, 17113, 18182, 17138, 18185, 18186, 15953, 17692, 18206, 18199, 18196, 15872, 15793, 15849, 17128, 17119, 17700, 15833, 18175, 15811, 15908, 15954, 17701, 17126, 15958, 18191, 17125, 15955, 18167, 15845, 18168, 15822, 18178, 15803, 15918, 17218, 17691, 15825, 15818, 15836, 15971, 18194, 15895, 18187, 15829, 15816, 17695, 17693, 18188, 18202, 15856, 15915, 15962, 15802, 15777, 15807, 17215, 17115, 15817, 17087, 15813, 15790, 17108, 15828, 18204, 15780, 15932, 15837, 15782, 17252, 15808, 15792, 17694, 15884, 15965, 17697, 15839, 15973, 17095, 15959, 17098, 15963, 17096, 15847, 15804, 17099, 17097, 15827, 15929, 15888, 17696, 15794, 15841, 15923, 15892, 17100, 15880, 17085, 15870, 15899, 17091, 17120, 17089, 15891, 17219, 17090, 15885, 15910, 17124, 15945, 15844, 17133, 15821, 15779, 15778, 15800, 18177, 18176, 15809, 15931, 15815, 17086, 15830, 18169, 15798, 17122, 17118, 17088, 15781, 17140, 15896, 15806, 15835, 17092, 15820, 15875, 15944, 17093, 15874, 15921, 15842, 18189, 18190, 17094, 17107, 17130, 15952, 15867, 17699, 15834, 15941, 15970, 15855, 17121, 15783, 15881, 15913, 15784, 15942, 15930, 17104, 17106, 15863, 15877, 14269, 18203, 14268, 14316, 16003, 17111, 19750, 19696, 19717, 19714, 19695, 19719, 19720, 19718, 19716, 19715, 19814, 19742, 19677, 19725, 19739, 19722, 19737, 19740, 19743, 19733, 19867, 19731, 19815, 19726, 19728, 19680, 19723, 19738, 19744, 19721, 19712, 19697, 19748, 19816, 19830, 19646, 19843, 19822, 19647, 19844, 15912, 19648, 19818, 19821, 19732, 19727, 19729, 19681, 19823, 17101, 19813, 19819, 19724, 19713, 19735, 19708, 19745, 19649, 19845, 19678, 19829, 19650, 19846, 19825, 19734, 19651, 19817, 19736, 19866, 19824, 19869, 19730, 19679, 19847, 19652, 19848, 19741, 19682, 19868, 19683, 19684, 15938, 19653, 19849, 19654, 19850, 19655, 19840, 19656, 19871, 19657, 19851, 19658, 19852, 19659, 19853, 19660, 19661, 19854, 19662, 19855, 19663, 19827, 19664, 19698, 19700, 19701, 19856, 19665, 19820, 19666, 19828, 19667, 19857, 19668, 19826, 19669, 19858, 19835, 19670, 19685, 19834, 19686, 19749, 19671, 19838, 19687, 19688, 19710, 15887, 19672, 19859, 19833, 19860, 17135, 19689, 19861, 15886, 19690, 19707, 19702, 19699, 19703, 19831, 19836, 19673, 19862, 19674, 19863, 19675, 19832, 19691, 19837, 19692, 19812, 19706, 19705, 15805, 19839, 19842, 19676, 19841, 19711, 19709, 15920, 19704, 19693, 19864, 19694, 19865, 19747, 19746, 15824, 15832, 19874, 15861, 15791, 15819, 15865, 19870, 19875, 15826, 19872, 15862, 15911, 15961, 15902, 15801, 15866, 15939, 17114, 17112, 15926, 17117, 15873, 17132, 15812, 17136, 15907, 15909, 15851, 15937, 15950, 15936, 15864, 15933, 15940, 15927, 15903, 15924, 15901, 15906, 17134, 15916, 15869, 15894, 15935, 15919, 17127, 15925, 15943, 15956, 15922, 15905, 15898, 15917, 15914, 15900, 17103, 19927, 15928, 21015, 19928, 15878, 15858, 15795, 15897, 15831, 15860, 15799, 15947, 17689, 17102, 15843, 15951, 15797, 15850, 15948, 15882, 15893, 15840, 15876, 15879, 19873, 15854, 15871, 15852, 15838, 15890, 17105, 15868, 15823, 15934, 17116, 18219, 15853, 17129, 15949, 15946, 17109, 17123, 15904, 15859, 15889, 15848, 21061, 21062, 21063, 21064, 21065, 21066, 21067, 21068, 21069, 21070, 21071, 21072, 16986, 16890, 16888, 16866, 16863, 16976, 16867, 16932, 16861, 16883, 16948, 16912, 16899, 16895, 16896, 16887, 16937, 16946, 16938, 16984, 16936, 16977, 16909, 16954, 16968, 16966, 16886, 16942, 16889, 16947, 16926, 16945, 16875, 16877, 16879, 16928, 16885, 16902, 16898, 16894, 16893, 16906, 16897, 16876, 16916, 16905, 16971, 16978, 16983, 16967, 16953, 16955, 16949, 16904, 16878, 16963, 16882, 16982, 16892, 16969, 16943, 16891, 16874, 16927, 16873, 16924, 16917, 16884, 16930, 16985, 16929, 16931, 16921, 16913, 16920, 16941, 16871, 16901, 16980, 16923, 16944, 16914, 16972, 16957, 16951, 16959, 16952, 16973, 16868, 16865, 16935, 16862, 16900, 16910, 16950, 16870, 16922, 16933, 16960, 16981, 16872, 16970, 16880, 16979, 16961, 16881, 16869, 16915, 16903, 16908, 16974, 16964, 16975, 16864, 16911, 16907, 16962, 16925, 16956, 16918, 16965, 16919, 19897, 19908, 19913, 19914, 19916, 19922, 19896, 19898, 19903, 19906, 19912, 19917, 19919, 19920, 19901, 19902, 19905, 19904, 19910, 19899, 19900, 19918, 19907, 19909, 19911, 19915, 19921, 19923, 19924, 19925, 19926, 16423, 17168, 16391, 16386, 16393, 16392, 17166, 16387, 16540, 16512, 16389, 16541, 16510, 17221, 16539, 16388, 16396, 16511, 16397, 16385, 16390, 16382, 16383, 16384, 16509, 16508, 16507, 17222, 16395, 17167, 16513, 16394, 16514, 17730, 17152, 17153, 17169, 17765, 17764, 17769, 17772, 17170, 17803, 17816, 16453, 17155, 16078, 16053, 16414, 17861, 17868, 17870, 17871, 17223, 17891, 17921, 17920, 17923, 17927, 17928, 17937, 17939, 17944, 17951, 17963, 16504, 17982, 17984, 17986, 17988, 17989, 19636, 17994, 17996, 19637, 19639, 19640, 19641, 17952, 17948, 16049, 17959, 17975, 16048, 17980, 16502, 17917, 16333, 16339, 16329, 16343, 16340, 16421, 16418, 16344, 16417, 17947, 16342, 16345, 16341, 17973, 16422, 19638, 17738, 16485, 16065, 16275, 16416, 16415, 17156, 16254, 16457, 16303, 16326, 16491, 16305, 16062, 16072, 16327, 16238, 16498, 16061, 16077, 17895, 16256, 17964, 16239, 16240, 16243, 16304, 16355, 16263, 17878, 17224, 17226, 17225, 17874, 17879, 16047, 16051, 16042, 16056, 16040, 17941, 16054, 16055, 16244, 16017, 16009, 16010, 16484, 16486, 16494, 16067, 16301, 16325, 16487, 16332, 16052, 16085, 16041, 16250, 16420, 16084, 16262, 16248, 16330, 16252, 16027, 16496, 17862, 17958, 16276, 16246, 17863, 16272, 16581, 16585, 16273, 16505, 16274, 16583, 16068, 16253, 16291, 16251, 16039, 16038, 16022, 16419, 17828, 16021, 16026, 16028, 16029, 16280, 16020, 16249, 16083, 16037, 16066, 16050, 16024, 17843, 17808, 17774, 16064, 16488, 17780, 16018, 16076, 16032, 16060, 16015, 17154, 16030, 17838, 16034, 16080, 16036, 16082, 16081, 16045, 16031, 16059, 16035, 16079, 16314, 16033, 16016, 16012, 16025, 16014, 16019, 16011, 16247, 16255, 16071, 16281, 16063, 16524, 16490, 16328, 17887, 17967, 17897, 17965, 16264, 17934, 16431, 16535, 17877, 17851, 17804, 16489, 17990, 17991, 16531, 17972, 16534, 16432, 16500, 16501, 16586, 17227, 16587, 17872, 17901, 17220, 16530, 16503, 17974, 17753, 16528, 16549, 17968, 16495, 17936, 16499, 16497, 16454, 17876, 16584, 16529, 16536, 16582, 16506, 17852, 16023, 16070, 16044, 16043, 16069, 16046, 17796, 16057, 16058, 16317, 16407, 16410, 16456, 16380, 16409, 16319, 16408, 16492, 16324, 16321, 16381, 16320, 16323, 16322, 16411, 16412, 16413, 16318, 16483, 16523, 17781, 16525, 16302, 16526, 16527, 16493, 17720, 16533, 17805, 17836, 16013, 16086, 16094, 18009, 16097, 18016, 17157, 16107, 18037, 16108, 17158, 16111, 16286, 16308, 18059, 16310, 18062, 16124, 17159, 16100, 16349, 16112, 16099, 16351, 16352, 16353, 16573, 16119, 16309, 16354, 16103, 16105, 16106, 16104, 18073, 16088, 16089, 16090, 16095, 16091, 16092, 16093, 16087, 16126, 18002, 16096, 18011, 16306, 16350, 16378, 16379, 16287, 18020, 16114, 16377, 16102, 16101, 16109, 16110, 16285, 16116, 16307, 16120, 16117, 16118, 16288, 16289, 16245, 16115, 16572, 16290, 16311, 16122, 16312, 16313, 16125, 16331, 16123, 16098, 16113, 16121, 18218, 19643, 19644, 17036, 17037, 17038, 17039, 17040, 17041, 17042, 17045, 17047, 17048, 17052, 17043, 17044, 17046, 17049, 17050, 17053, 17054, 17055, 17056, 17057, 17058, 17059, 17051, 17060, 16625, 16623, 16597, 16619, 16598, 16594, 16617, 16595, 16622, 16620, 16621, 16618, 16616, 16627, 16626, 16603, 16602, 16601, 16600, 16615, 16599, 16624, 20686, 20169, 20164, 20166, 20171, 20175, 20168, 20173, 20165, 20170, 20167, 20174, 20242, 20386, 20241, 20474, 20535, 20523, 20529, 20525, 20524, 20569, 20537, 20563, 20649, 20590, 20665, 20567, 20655, 20635, 20654, 20610, 20605, 20620, 20544, 20617, 20600, 20666, 20596, 20639, 20667, 20636, 20556, 20630, 20615, 20621, 20622, 20538, 20658, 20672, 20555, 20601, 20595, 20643, 20568, 20611, 20648, 20559, 20599, 20591, 16130, 20566, 20613, 20638, 20536, 20562, 20625, 20631, 20607, 20608, 20572, 20602, 20560, 20570, 20592, 20549, 20585, 20545, 20533, 20687, 20540, 20574, 20583, 20531, 20532, 20392, 20306, 20307, 20265, 20407, 20279, 20318, 20433, 20182, 20370, 20371, 20246, 20343, 20189, 20482, 20237, 20291, 20494, 20359, 20421, 20416, 20336, 20177, 20384, 20380, 20436, 20266, 20314, 20393, 20358, 20230, 20190, 20305, 20498, 20207, 20253, 20465, 20319, 20337, 20448, 20480, 20382, 20490, 20342, 20477, 20449, 20408, 20334, 20450, 20387, 20360, 20365, 20432, 20518, 20362, 20522, 20468, 20411, 20352, 20348, 20467, 20519, 20286, 20412, 20481, 20437, 20403, 20347, 20381, 20299, 20447, 20462, 20293, 20476, 20491, 20509, 20444, 20303, 20399, 20404, 20488, 20367, 20479, 20423, 20517, 20459, 20315, 20417, 20445, 20725, 20372, 20506, 20373, 20512, 20457, 20389, 20366, 20492, 20443, 20285, 20354, 20508, 20727, 20310, 20484, 20516, 20422, 20470, 20317, 20287, 20338, 20460, 20497, 20413, 20322, 20409, 20394, 20520, 20438, 20385, 20415, 20294, 20388, 20511, 20377, 20502, 20505, 20344, 20283, 20434, 20290, 16127, 20571, 20683, 20659, 20664, 20616, 20676, 20598, 20561, 20587, 20650, 20668, 20657, 20588, 20398, 20557, 20661, 20656, 20604, 20673, 20614, 20623, 20593, 20589, 20558, 20652, 20663, 20594, 20682, 20618, 20626, 20634, 20637, 20632, 20671, 20597, 20565, 20640, 20680, 20612, 20651, 20674, 20677, 20660, 20627, 20684, 20662, 20603, 20647, 20624, 20678, 20670, 20675, 20653, 20619, 20606, 20609, 20573, 20552, 20629, 20644, 20243, 16261, 16346, 16338, 16131, 16132, 20213, 20284, 20218, 20304, 20351, 20231, 20260, 20187, 20268, 20320, 20256, 20272, 20316, 20245, 20236, 20226, 20397, 20521, 20728, 20471, 20442, 20499, 20364, 20300, 20495, 20295, 20296, 20429, 20193, 20324, 20504, 20288, 20420, 20332, 20271, 20369, 20311, 20325, 20289, 20335, 20323, 20439, 20357, 20368, 20472, 20425, 20493, 20451, 20339, 20463, 20435, 20401, 20225, 20281, 20483, 20374, 20405, 20278, 20326, 20456, 20485, 20455, 20378, 20430, 20452, 20726, 20496, 20461, 20419, 20391, 20464, 20501, 20469, 20458, 20473, 20379, 20390, 20349, 20402, 20418, 20503, 20669, 20489, 20396, 20277, 20353, 20282, 20273, 20327, 20235, 20261, 20424, 20217, 20361, 20208, 20270, 20406, 20453, 20375, 20500, 20466, 20395, 20350, 20346, 20262, 20400, 20251, 20312, 20440, 20487, 20228, 20297, 20328, 20446, 20263, 20222, 20355, 20247, 20313, 20475, 20340, 20223, 20478, 20514, 20426, 20427, 20431, 20363, 20249, 20224, 20244, 20454, 20264, 20428, 20515, 20321, 20383, 20410, 20274, 20275, 20329, 20333, 20298, 20330, 20356, 20331, 20280, 20414, 20441, 20376, 20507, 16347, 20188, 20345, 20308, 20301, 20248, 20258, 20341, 20302, 20229, 20276, 20551, 20201, 20205, 20216, 20252, 20209, 20204, 20259, 20195, 20206, 20215, 20198, 20176, 20292, 20196, 20220, 20214, 20185, 20200, 20255, 20194, 20184, 20234, 20212, 20186, 20219, 20179, 20178, 20238, 20183, 20227, 20202, 20172, 20267, 20240, 20192, 20181, 20191, 20232, 20210, 20250, 20180, 20221, 20199, 20203, 20233, 20211, 20197, 20269, 20257, 16532, 16129, 16128, 20309, 20486, 20510, 20513, 20628, 20578, 20685, 20239, 20534, 20542, 20546, 20547, 20641, 20527, 20584, 20582, 20526, 20539, 20541, 20530, 20575, 20564, 20528, 20580, 20554, 16519, 16133, 20586, 20254, 20553, 20548, 20581, 20576, 16521, 16002, 16257, 20679, 20681, 20642, 20646, 20543, 20579, 20633, 20550, 20577, 20645, 16520, 16443, 16548, 16437, 16545, 16438, 16439, 17172, 16440, 16546, 16442, 16547, 16434, 16436, 16447, 16441, 16542, 17173, 16543, 16448, 16544, 16444, 16450, 16435, 16452, 16445, 17171, 16446, 16449, 16451, 20758, 20774, 20783, 20775, 20767, 20778, 20834, 20773, 20761, 20763, 20792, 20796, 20866, 20944, 20889, 20951, 20847, 20806, 20941, 20942, 20897, 20978, 20909, 20977, 20885, 16517, 20844, 20965, 20938, 20902, 20937, 20956, 20764, 20998, 20851, 20857, 20864, 20892, 20795, 20924, 20971, 20923, 20882, 20878, 20900, 20906, 20839, 20932, 20905, 20908, 20791, 20856, 20863, 20919, 20931, 20797, 20890, 20953, 20826, 20815, 20853, 20988, 20907, 20980, 20904, 20898, 20967, 16074, 20963, 21000, 20987, 20985, 20867, 20982, 20818, 20992, 20984, 20979, 20930, 21001, 20860, 20786, 20896, 20868, 20926, 20816, 20986, 20873, 20996, 20999, 20928, 20798, 20940, 20819, 20922, 21003, 20788, 20794, 20843, 20803, 16073, 20859, 20858, 20827, 20768, 20814, 20993, 20852, 21014, 21008, 20968, 20817, 20899, 20957, 20821, 20824, 20954, 20832, 20959, 20981, 20787, 20946, 21013, 20861, 20955, 21010, 20958, 20869, 20825, 20770, 21012, 20969, 21009, 21007, 20973, 20802, 20915, 20925, 20997, 20789, 20893, 20983, 20822, 20994, 20927, 20894, 20793, 20880, 21005, 20948, 20785, 20837, 20790, 20870, 20995, 20862, 20918, 20962, 20805, 20801, 20972, 21011, 20891, 20934, 20841, 20989, 20964, 20759, 20760, 20836, 20828, 20916, 20781, 20776, 20762, 20777, 20835, 20782, 20846, 21002, 20830, 20920, 20838, 20766, 21006, 20771, 20820, 20913, 20769, 20854, 20823, 20914, 20840, 20933, 20831, 20921, 20772, 20833, 20765, 20935, 20936, 21004, 20855, 20829, 20917, 20780, 20850, 20960, 20779, 20865, 20807, 20872, 20975, 20877, 20991, 20875, 16516, 20949, 20910, 20879, 20887, 20952, 20849, 20911, 20810, 20912, 20871, 20966, 20881, 20976, 20943, 20811, 20883, 20813, 20842, 20886, 20812, 20903, 20876, 20808, 20784, 20809, 20929, 16518, 20804, 20845, 20901, 20945, 20939, 20947, 20970, 20888, 20974, 20884, 20950, 20895, 20848, 20990, 20961, 20874, 20799, 20800, 19894, 19895, 19888, 19889, 19891, 19892, 19893, 19890, 15739, 16614, 16606, 16608, 16607, 16610, 16590, 16589, 16588, 16609, 16593, 16613, 16612, 16592, 16591, 16611, 16988, 16994, 21080, 21022, 16992, 16989, 21025, 21028, 16987, 17000, 16999, 16991, 16990, 16993, 21029, 21024, 21023, 16997, 16998, 17001, 17003, 17002, 21026, 21027, 16996, 21030, 16995, 21031, 21032, 21076, 21077, 21078, 21079, 21075, 21073, 21074, 86, 17656, 20040,

}

func main() {
	// Define the MediaID here. Irs required only when executing "RunMediaRelations()"
	mediaIDs := []int{}

	p := NewPipeLineRunner(
		// Define the environment
		// EnvironmentProd,
		EnvironmentStaging,

		// Define the environment specific vertical ID
		// TyreVerticalIDProd,
		// ServicingVerticalIDProd,
		TyreVerticalIDStaging,

		// Define the environment specific variation ID
		// TyreVariationIDsProd,
		// ServicingVariationIDsProd,
		TyreVariationIDsStaging,

		mediaIDs,
		
	)

	// Uncomment only the required function calls and execute the script. Prefer to do one at a time and verify.


// ============================= //
// 		SEQUENCE TO RUN THIS SCRIPT : 
//		 1. Upload the sheet using google sheets
//		 2. Run the location api from postman
//		 3. RunOpsAsset(p)
//		 4. RunPrePostChecks(p)
// ============================= //

	// Attaching variation to op assets
	// RunOpsAsset(p)

	// Attaching checks to variations
	// RunPrePostChecks(p)

	// Attach the media relationships
	// RunMediaRelations(p)



	//DELETE MEDIA RELATIONS STAGING 

	RunDeleteMediaRelations(p)
}
